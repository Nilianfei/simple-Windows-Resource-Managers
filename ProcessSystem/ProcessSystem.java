/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProcessSystem;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.JTable;

/**
 *
 * @author Afei
 */
public class ProcessSystem extends javax.swing.JFrame {

    /**
     * Creates new form ProcessSystem
     */
    public ProcessSystem() {
        initComponents();
        ImageIcon icon=new ImageIcon("image\\rwglq.png");
        this.setIconImage(icon.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuPS = new javax.swing.JPopupMenu();
        jMenuItemEP = new javax.swing.JMenuItem();
        jScrollPanePS = new javax.swing.JScrollPane();
        jTablePS = new javax.swing.JTable();
        jButtonEP = new javax.swing.JButton();
        jLabelPnt = new javax.swing.JLabel();
        jLabelPn = new javax.swing.JLabel();

        jMenuItemEP.setText("结束进程");
        jMenuItemEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEPActionPerformed(evt);
            }
        });
        jPopupMenuPS.add(jMenuItemEP);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTablePS.setModel(mtm);
        jTablePS.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTablePS.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTablePS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePSMouseClicked(evt);
            }
        });
        jTablePS.getColumnModel().getColumn(0).setCellRenderer(new TableRenderPS());
        jTablePS.getColumnModel().getColumn(1).setCellRenderer(new TableRenderPS());
        jTablePS.getColumnModel().getColumn(2).setCellRenderer(new TableRenderPS());
        jScrollPanePS.setViewportView(jTablePS);

        jButtonEP.setText("结束进程");
        jButtonEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEPActionPerformed(evt);
            }
        });

        jLabelPnt.setText("进程数：");

        jLabelPn.setText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanePS, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabelPnt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonEP)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanePS, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEP)
                    .addComponent(jLabelPnt)
                    .addComponent(jLabelPn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablePSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePSMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==1){
            row=((JTable)evt.getSource()).rowAtPoint(evt.getPoint());
            column=((JTable)evt.getSource()).columnAtPoint(evt.getPoint());
            ProcessName=(String)(jTablePS.getValueAt(row,0));
            ProcessID=(String)(jTablePS.getValueAt(row,1));
            
            jTablePS.setRowSelectionAllowed(false);
            jTablePS.setRowSelectionAllowed(true);
            jTablePS.setRowSelectionInterval(row, row);
        }
        if(evt.getButton()==java.awt.event.MouseEvent.BUTTON3){
            row=((JTable)evt.getSource()).rowAtPoint(evt.getPoint());
            column=((JTable)evt.getSource()).columnAtPoint(evt.getPoint());
            ProcessName=(String)(jTablePS.getValueAt(row,0));
            ProcessID=(String)(jTablePS.getValueAt(row,1));
            jPopupMenuPS.show(jTablePS, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jTablePSMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        SourceSystem.SourceSystem.startPS.setEnabled(true);
    }//GEN-LAST:event_formWindowClosed

    private void jButtonEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEPActionPerformed
        // TODO add your handling code here:
        if(ProcessName==null||ProcessID==null)return;
        int PID=Integer.parseInt(ProcessID);
        int t=JOptionPane.showConfirmDialog(null, "你确定要结束进程 \""+ProcessName+"\" 吗?","",YES_NO_OPTION);
        if(t==0)
            if(killProcess.INSTANCE.killProcess(PID)==-1){
                JOptionPane.showMessageDialog(null,"进程 \""+ProcessName+"\" 不存在");
                return;
            }
    }//GEN-LAST:event_jButtonEPActionPerformed

    private void jMenuItemEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEPActionPerformed
        // TODO add your handling code here:
        if(ProcessName==null||ProcessID==null)return;
        int PID=Integer.parseInt(ProcessID);
        int t=JOptionPane.showConfirmDialog(null, "你确定要结束进程 \""+ProcessName+"\" 吗?","",YES_NO_OPTION);
        if(t==0)
            if(killProcess.INSTANCE.killProcess(PID)==-1){
                JOptionPane.showMessageDialog(null,"进程 \""+ProcessName+"\" 不存在");
                return;
            }
    }//GEN-LAST:event_jMenuItemEPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void startProcessSystem() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProcessSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProcessSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProcessSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProcessSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProcessSystem PS=new ProcessSystem();
                PS.setTitle("任务管理器");
                PS.setLocation(200, 200);
                PS.setVisible(true);
                watchProcessInfoThread myThread=new watchProcessInfoThread();
                myThread.start();
            }
        });
    }

    public static MyTableModelPS mtm=new MyTableModelPS();
    public static int row=0,column=0;
    private static  String ProcessID,ProcessName;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEP;
    public static javax.swing.JLabel jLabelPn;
    private javax.swing.JLabel jLabelPnt;
    private javax.swing.JMenuItem jMenuItemEP;
    private javax.swing.JPopupMenu jPopupMenuPS;
    private javax.swing.JScrollPane jScrollPanePS;
    private javax.swing.JTable jTablePS;
    // End of variables declaration//GEN-END:variables
}
